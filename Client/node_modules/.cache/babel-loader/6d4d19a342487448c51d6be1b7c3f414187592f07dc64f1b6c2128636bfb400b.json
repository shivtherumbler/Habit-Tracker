{"ast":null,"code":"'use strict';\n\nconst TEMPLATE_REGEX = /(?:\\\\(u(?:[a-f\\d]{4}|\\{[a-f\\d]{1,6}\\})|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nconst ESCAPE_REGEX = /\\\\(u(?:[a-f\\d]{4}|\\{[a-f\\d]{1,6}\\})|x[a-f\\d]{2}|.)|([^\\\\])/gi;\nconst ESCAPES = new Map([['n', '\\n'], ['r', '\\r'], ['t', '\\t'], ['b', '\\b'], ['f', '\\f'], ['v', '\\v'], ['0', '\\0'], ['\\\\', '\\\\'], ['e', '\\u001B'], ['a', '\\u0007']]);\nfunction unescape(c) {\n  const u = c[0] === 'u';\n  const bracket = c[1] === '{';\n  if (u && !bracket && c.length === 5 || c[0] === 'x' && c.length === 3) {\n    return String.fromCharCode(parseInt(c.slice(1), 16));\n  }\n  if (u && bracket) {\n    return String.fromCodePoint(parseInt(c.slice(2, -1), 16));\n  }\n  return ESCAPES.get(c) || c;\n}\nfunction parseArguments(name, arguments_) {\n  const results = [];\n  const chunks = arguments_.trim().split(/\\s*,\\s*/g);\n  let matches;\n  for (const chunk of chunks) {\n    const number = Number(chunk);\n    if (!Number.isNaN(number)) {\n      results.push(number);\n    } else if (matches = chunk.match(STRING_REGEX)) {\n      results.push(matches[2].replace(ESCAPE_REGEX, (m, escape, character) => escape ? unescape(escape) : character));\n    } else {\n      throw new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\n    }\n  }\n  return results;\n}\nfunction parseStyle(style) {\n  STYLE_REGEX.lastIndex = 0;\n  const results = [];\n  let matches;\n  while ((matches = STYLE_REGEX.exec(style)) !== null) {\n    const name = matches[1];\n    if (matches[2]) {\n      const args = parseArguments(name, matches[2]);\n      results.push([name].concat(args));\n    } else {\n      results.push([name]);\n    }\n  }\n  return results;\n}\nfunction buildStyle(chalk, styles) {\n  const enabled = {};\n  for (const layer of styles) {\n    for (const style of layer.styles) {\n      enabled[style[0]] = layer.inverse ? null : style.slice(1);\n    }\n  }\n  let current = chalk;\n  for (const [styleName, styles] of Object.entries(enabled)) {\n    if (!Array.isArray(styles)) {\n      continue;\n    }\n    if (!(styleName in current)) {\n      throw new Error(`Unknown Chalk style: ${styleName}`);\n    }\n    current = styles.length > 0 ? current[styleName](...styles) : current[styleName];\n  }\n  return current;\n}\nmodule.exports = (chalk, temporary) => {\n  const styles = [];\n  const chunks = [];\n  let chunk = [];\n\n  // eslint-disable-next-line max-params\n  temporary.replace(TEMPLATE_REGEX, (m, escapeCharacter, inverse, style, close, character) => {\n    if (escapeCharacter) {\n      chunk.push(unescape(escapeCharacter));\n    } else if (style) {\n      const string = chunk.join('');\n      chunk = [];\n      chunks.push(styles.length === 0 ? string : buildStyle(chalk, styles)(string));\n      styles.push({\n        inverse,\n        styles: parseStyle(style)\n      });\n    } else if (close) {\n      if (styles.length === 0) {\n        throw new Error('Found extraneous } in Chalk template literal');\n      }\n      chunks.push(buildStyle(chalk, styles)(chunk.join('')));\n      chunk = [];\n      styles.pop();\n    } else {\n      chunk.push(character);\n    }\n  });\n  chunks.push(chunk.join(''));\n  if (styles.length > 0) {\n    const errMsg = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\\`}\\`)`;\n    throw new Error(errMsg);\n  }\n  return chunks.join('');\n};","map":{"version":3,"names":["TEMPLATE_REGEX","STYLE_REGEX","STRING_REGEX","ESCAPE_REGEX","ESCAPES","Map","unescape","c","u","bracket","length","String","fromCharCode","parseInt","slice","fromCodePoint","get","parseArguments","name","arguments_","results","chunks","trim","split","matches","chunk","number","Number","isNaN","push","match","replace","m","escape","character","Error","parseStyle","style","lastIndex","exec","args","concat","buildStyle","chalk","styles","enabled","layer","inverse","current","styleName","Object","entries","Array","isArray","module","exports","temporary","escapeCharacter","close","string","join","pop","errMsg"],"sources":["D:/Sheridan Study/MediaManagement/IMMTesting/sem2/habit-tracker-app/Habit-Tracker/Client/node_modules/@testing-library/jest-dom/node_modules/chalk/source/templates.js"],"sourcesContent":["'use strict';\r\nconst TEMPLATE_REGEX = /(?:\\\\(u(?:[a-f\\d]{4}|\\{[a-f\\d]{1,6}\\})|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\r\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\r\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\r\nconst ESCAPE_REGEX = /\\\\(u(?:[a-f\\d]{4}|\\{[a-f\\d]{1,6}\\})|x[a-f\\d]{2}|.)|([^\\\\])/gi;\r\n\r\nconst ESCAPES = new Map([\r\n\t['n', '\\n'],\r\n\t['r', '\\r'],\r\n\t['t', '\\t'],\r\n\t['b', '\\b'],\r\n\t['f', '\\f'],\r\n\t['v', '\\v'],\r\n\t['0', '\\0'],\r\n\t['\\\\', '\\\\'],\r\n\t['e', '\\u001B'],\r\n\t['a', '\\u0007']\r\n]);\r\n\r\nfunction unescape(c) {\r\n\tconst u = c[0] === 'u';\r\n\tconst bracket = c[1] === '{';\r\n\r\n\tif ((u && !bracket && c.length === 5) || (c[0] === 'x' && c.length === 3)) {\r\n\t\treturn String.fromCharCode(parseInt(c.slice(1), 16));\r\n\t}\r\n\r\n\tif (u && bracket) {\r\n\t\treturn String.fromCodePoint(parseInt(c.slice(2, -1), 16));\r\n\t}\r\n\r\n\treturn ESCAPES.get(c) || c;\r\n}\r\n\r\nfunction parseArguments(name, arguments_) {\r\n\tconst results = [];\r\n\tconst chunks = arguments_.trim().split(/\\s*,\\s*/g);\r\n\tlet matches;\r\n\r\n\tfor (const chunk of chunks) {\r\n\t\tconst number = Number(chunk);\r\n\t\tif (!Number.isNaN(number)) {\r\n\t\t\tresults.push(number);\r\n\t\t} else if ((matches = chunk.match(STRING_REGEX))) {\r\n\t\t\tresults.push(matches[2].replace(ESCAPE_REGEX, (m, escape, character) => escape ? unescape(escape) : character));\r\n\t\t} else {\r\n\t\t\tthrow new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\r\n\t\t}\r\n\t}\r\n\r\n\treturn results;\r\n}\r\n\r\nfunction parseStyle(style) {\r\n\tSTYLE_REGEX.lastIndex = 0;\r\n\r\n\tconst results = [];\r\n\tlet matches;\r\n\r\n\twhile ((matches = STYLE_REGEX.exec(style)) !== null) {\r\n\t\tconst name = matches[1];\r\n\r\n\t\tif (matches[2]) {\r\n\t\t\tconst args = parseArguments(name, matches[2]);\r\n\t\t\tresults.push([name].concat(args));\r\n\t\t} else {\r\n\t\t\tresults.push([name]);\r\n\t\t}\r\n\t}\r\n\r\n\treturn results;\r\n}\r\n\r\nfunction buildStyle(chalk, styles) {\r\n\tconst enabled = {};\r\n\r\n\tfor (const layer of styles) {\r\n\t\tfor (const style of layer.styles) {\r\n\t\t\tenabled[style[0]] = layer.inverse ? null : style.slice(1);\r\n\t\t}\r\n\t}\r\n\r\n\tlet current = chalk;\r\n\tfor (const [styleName, styles] of Object.entries(enabled)) {\r\n\t\tif (!Array.isArray(styles)) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tif (!(styleName in current)) {\r\n\t\t\tthrow new Error(`Unknown Chalk style: ${styleName}`);\r\n\t\t}\r\n\r\n\t\tcurrent = styles.length > 0 ? current[styleName](...styles) : current[styleName];\r\n\t}\r\n\r\n\treturn current;\r\n}\r\n\r\nmodule.exports = (chalk, temporary) => {\r\n\tconst styles = [];\r\n\tconst chunks = [];\r\n\tlet chunk = [];\r\n\r\n\t// eslint-disable-next-line max-params\r\n\ttemporary.replace(TEMPLATE_REGEX, (m, escapeCharacter, inverse, style, close, character) => {\r\n\t\tif (escapeCharacter) {\r\n\t\t\tchunk.push(unescape(escapeCharacter));\r\n\t\t} else if (style) {\r\n\t\t\tconst string = chunk.join('');\r\n\t\t\tchunk = [];\r\n\t\t\tchunks.push(styles.length === 0 ? string : buildStyle(chalk, styles)(string));\r\n\t\t\tstyles.push({inverse, styles: parseStyle(style)});\r\n\t\t} else if (close) {\r\n\t\t\tif (styles.length === 0) {\r\n\t\t\t\tthrow new Error('Found extraneous } in Chalk template literal');\r\n\t\t\t}\r\n\r\n\t\t\tchunks.push(buildStyle(chalk, styles)(chunk.join('')));\r\n\t\t\tchunk = [];\r\n\t\t\tstyles.pop();\r\n\t\t} else {\r\n\t\t\tchunk.push(character);\r\n\t\t}\r\n\t});\r\n\r\n\tchunks.push(chunk.join(''));\r\n\r\n\tif (styles.length > 0) {\r\n\t\tconst errMsg = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\\`}\\`)`;\r\n\t\tthrow new Error(errMsg);\r\n\t}\r\n\r\n\treturn chunks.join('');\r\n};\r\n"],"mappings":"AAAA,YAAY;;AACZ,MAAMA,cAAc,GAAG,2JAA2J;AAClL,MAAMC,WAAW,GAAG,gCAAgC;AACpD,MAAMC,YAAY,GAAG,kCAAkC;AACvD,MAAMC,YAAY,GAAG,8DAA8D;AAEnF,MAAMC,OAAO,GAAG,IAAIC,GAAG,CAAC,CACvB,CAAC,GAAG,EAAE,IAAI,CAAC,EACX,CAAC,GAAG,EAAE,IAAI,CAAC,EACX,CAAC,GAAG,EAAE,IAAI,CAAC,EACX,CAAC,GAAG,EAAE,IAAI,CAAC,EACX,CAAC,GAAG,EAAE,IAAI,CAAC,EACX,CAAC,GAAG,EAAE,IAAI,CAAC,EACX,CAAC,GAAG,EAAE,IAAI,CAAC,EACX,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,GAAG,EAAE,QAAQ,CAAC,EACf,CAAC,GAAG,EAAE,QAAQ,CAAC,CACf,CAAC;AAEF,SAASC,QAAQA,CAACC,CAAC,EAAE;EACpB,MAAMC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG;EACtB,MAAME,OAAO,GAAGF,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG;EAE5B,IAAKC,CAAC,IAAI,CAACC,OAAO,IAAIF,CAAC,CAACG,MAAM,KAAK,CAAC,IAAMH,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAIA,CAAC,CAACG,MAAM,KAAK,CAAE,EAAE;IAC1E,OAAOC,MAAM,CAACC,YAAY,CAACC,QAAQ,CAACN,CAAC,CAACO,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;EACrD;EAEA,IAAIN,CAAC,IAAIC,OAAO,EAAE;IACjB,OAAOE,MAAM,CAACI,aAAa,CAACF,QAAQ,CAACN,CAAC,CAACO,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;EAC1D;EAEA,OAAOV,OAAO,CAACY,GAAG,CAACT,CAAC,CAAC,IAAIA,CAAC;AAC3B;AAEA,SAASU,cAAcA,CAACC,IAAI,EAAEC,UAAU,EAAE;EACzC,MAAMC,OAAO,GAAG,EAAE;EAClB,MAAMC,MAAM,GAAGF,UAAU,CAACG,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,UAAU,CAAC;EAClD,IAAIC,OAAO;EAEX,KAAK,MAAMC,KAAK,IAAIJ,MAAM,EAAE;IAC3B,MAAMK,MAAM,GAAGC,MAAM,CAACF,KAAK,CAAC;IAC5B,IAAI,CAACE,MAAM,CAACC,KAAK,CAACF,MAAM,CAAC,EAAE;MAC1BN,OAAO,CAACS,IAAI,CAACH,MAAM,CAAC;IACrB,CAAC,MAAM,IAAKF,OAAO,GAAGC,KAAK,CAACK,KAAK,CAAC5B,YAAY,CAAC,EAAG;MACjDkB,OAAO,CAACS,IAAI,CAACL,OAAO,CAAC,CAAC,CAAC,CAACO,OAAO,CAAC5B,YAAY,EAAE,CAAC6B,CAAC,EAAEC,MAAM,EAAEC,SAAS,KAAKD,MAAM,GAAG3B,QAAQ,CAAC2B,MAAM,CAAC,GAAGC,SAAS,CAAC,CAAC;IAChH,CAAC,MAAM;MACN,MAAM,IAAIC,KAAK,CAAC,0CAA0CV,KAAK,eAAeP,IAAI,IAAI,CAAC;IACxF;EACD;EAEA,OAAOE,OAAO;AACf;AAEA,SAASgB,UAAUA,CAACC,KAAK,EAAE;EAC1BpC,WAAW,CAACqC,SAAS,GAAG,CAAC;EAEzB,MAAMlB,OAAO,GAAG,EAAE;EAClB,IAAII,OAAO;EAEX,OAAO,CAACA,OAAO,GAAGvB,WAAW,CAACsC,IAAI,CAACF,KAAK,CAAC,MAAM,IAAI,EAAE;IACpD,MAAMnB,IAAI,GAAGM,OAAO,CAAC,CAAC,CAAC;IAEvB,IAAIA,OAAO,CAAC,CAAC,CAAC,EAAE;MACf,MAAMgB,IAAI,GAAGvB,cAAc,CAACC,IAAI,EAAEM,OAAO,CAAC,CAAC,CAAC,CAAC;MAC7CJ,OAAO,CAACS,IAAI,CAAC,CAACX,IAAI,CAAC,CAACuB,MAAM,CAACD,IAAI,CAAC,CAAC;IAClC,CAAC,MAAM;MACNpB,OAAO,CAACS,IAAI,CAAC,CAACX,IAAI,CAAC,CAAC;IACrB;EACD;EAEA,OAAOE,OAAO;AACf;AAEA,SAASsB,UAAUA,CAACC,KAAK,EAAEC,MAAM,EAAE;EAClC,MAAMC,OAAO,GAAG,CAAC,CAAC;EAElB,KAAK,MAAMC,KAAK,IAAIF,MAAM,EAAE;IAC3B,KAAK,MAAMP,KAAK,IAAIS,KAAK,CAACF,MAAM,EAAE;MACjCC,OAAO,CAACR,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGS,KAAK,CAACC,OAAO,GAAG,IAAI,GAAGV,KAAK,CAACvB,KAAK,CAAC,CAAC,CAAC;IAC1D;EACD;EAEA,IAAIkC,OAAO,GAAGL,KAAK;EACnB,KAAK,MAAM,CAACM,SAAS,EAAEL,MAAM,CAAC,IAAIM,MAAM,CAACC,OAAO,CAACN,OAAO,CAAC,EAAE;IAC1D,IAAI,CAACO,KAAK,CAACC,OAAO,CAACT,MAAM,CAAC,EAAE;MAC3B;IACD;IAEA,IAAI,EAAEK,SAAS,IAAID,OAAO,CAAC,EAAE;MAC5B,MAAM,IAAIb,KAAK,CAAC,wBAAwBc,SAAS,EAAE,CAAC;IACrD;IAEAD,OAAO,GAAGJ,MAAM,CAAClC,MAAM,GAAG,CAAC,GAAGsC,OAAO,CAACC,SAAS,CAAC,CAAC,GAAGL,MAAM,CAAC,GAAGI,OAAO,CAACC,SAAS,CAAC;EACjF;EAEA,OAAOD,OAAO;AACf;AAEAM,MAAM,CAACC,OAAO,GAAG,CAACZ,KAAK,EAAEa,SAAS,KAAK;EACtC,MAAMZ,MAAM,GAAG,EAAE;EACjB,MAAMvB,MAAM,GAAG,EAAE;EACjB,IAAII,KAAK,GAAG,EAAE;;EAEd;EACA+B,SAAS,CAACzB,OAAO,CAAC/B,cAAc,EAAE,CAACgC,CAAC,EAAEyB,eAAe,EAAEV,OAAO,EAAEV,KAAK,EAAEqB,KAAK,EAAExB,SAAS,KAAK;IAC3F,IAAIuB,eAAe,EAAE;MACpBhC,KAAK,CAACI,IAAI,CAACvB,QAAQ,CAACmD,eAAe,CAAC,CAAC;IACtC,CAAC,MAAM,IAAIpB,KAAK,EAAE;MACjB,MAAMsB,MAAM,GAAGlC,KAAK,CAACmC,IAAI,CAAC,EAAE,CAAC;MAC7BnC,KAAK,GAAG,EAAE;MACVJ,MAAM,CAACQ,IAAI,CAACe,MAAM,CAAClC,MAAM,KAAK,CAAC,GAAGiD,MAAM,GAAGjB,UAAU,CAACC,KAAK,EAAEC,MAAM,CAAC,CAACe,MAAM,CAAC,CAAC;MAC7Ef,MAAM,CAACf,IAAI,CAAC;QAACkB,OAAO;QAAEH,MAAM,EAAER,UAAU,CAACC,KAAK;MAAC,CAAC,CAAC;IAClD,CAAC,MAAM,IAAIqB,KAAK,EAAE;MACjB,IAAId,MAAM,CAAClC,MAAM,KAAK,CAAC,EAAE;QACxB,MAAM,IAAIyB,KAAK,CAAC,8CAA8C,CAAC;MAChE;MAEAd,MAAM,CAACQ,IAAI,CAACa,UAAU,CAACC,KAAK,EAAEC,MAAM,CAAC,CAACnB,KAAK,CAACmC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;MACtDnC,KAAK,GAAG,EAAE;MACVmB,MAAM,CAACiB,GAAG,CAAC,CAAC;IACb,CAAC,MAAM;MACNpC,KAAK,CAACI,IAAI,CAACK,SAAS,CAAC;IACtB;EACD,CAAC,CAAC;EAEFb,MAAM,CAACQ,IAAI,CAACJ,KAAK,CAACmC,IAAI,CAAC,EAAE,CAAC,CAAC;EAE3B,IAAIhB,MAAM,CAAClC,MAAM,GAAG,CAAC,EAAE;IACtB,MAAMoD,MAAM,GAAG,qCAAqClB,MAAM,CAAClC,MAAM,mBAAmBkC,MAAM,CAAClC,MAAM,KAAK,CAAC,GAAG,EAAE,GAAG,GAAG,UAAU;IAC5H,MAAM,IAAIyB,KAAK,CAAC2B,MAAM,CAAC;EACxB;EAEA,OAAOzC,MAAM,CAACuC,IAAI,CAAC,EAAE,CAAC;AACvB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}